#!/bin/bash

usage () {
    echo 'usage: run <filename> [-p | --program-args <args>] [-c | --compiler-args <args>] [-o | --output <output-name>]'
}

if [[ $# -lt 1 ]]
then
    usage
    exit 1
fi

filename="$1"
extension="${filename##*.}"

if [[ $filename = "--help" ]]
then
	usage
	exit 0
elif [ ! -f "$filename" ]
then
    echo "run: error: '$filename' does not exist"
    exit 1
fi
if [[ "$extension" != "c" && "$extension" != "cpp" ]]
then
    echo "invalid extension: $extension"
    echo "appropriate extensions: c, cpp"
    exit 1
fi

args=("$@")
program_args=""
compiler_args=""
output=""

i=1
while [[ $i -lt $# ]]
do
    case "${args[$i]}" in
        "-p"|"--program-args")
            ((i++))
            program_args="$program_args ${args[$i]}"
            ;;
        "-c"|"--compiler-args")
            ((i++))
            compiler_args="$compiler_args ${args[$i]}"
            ;;
        "-o"|"--output")
            ((i++))
            output="${args[$i]}"
            ;;
        "--help")
            usage
            exit 0
            ;;
        *)
            echo "invalid argument: ${args[$i]}"
            usage
            exit 1
            ;;
    esac

    ((i++))
done

compiler=$([[ $extension = "c" ]] && echo "gcc" || echo "g++")

tmp_output=false
if [[ $output = "" ]]
then
    mkdir -p "$HOME/.cache/run_tmp"
    output="$(mktemp -u -p "$HOME/.cache/run_tmp" --suffix="_$(date +%s)" "progXXXXXX")"
    tmp_output=true
fi

$compiler "$filename" -o "$output" $compiler_args
exit_code=$?
if [ $exit_code -ne 0 ]
then
    exit $exit_code
fi
"$output" $program_args
exit_code=$?
if [[ $tmp_output = true ]]
then
    rm "$output"
fi
exit $exit_code
